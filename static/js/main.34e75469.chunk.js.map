{"version":3,"sources":["Blocks/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","state","results","movie","errorMsg","showDeatail","search","axios","get","then","response","setState","data","catch","err","console","log","event","preventDefault","name","target","this","value","id","currentTarget","className","type","placeholder","onChange","handleChange","bind","map","element","index","key","onClick","getOneMovieDetail","src","poster_path","original_title","vote_average","release_date","overview","style","backgroundImage","backdrop_path","genres","runtime","tagline","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.34e75469.chunk.js","sourcesContent":["import React , { Component} from 'react';\nimport axios from 'axios';\n\n\nimport \"./Layout.css\";\nexport default class Layout extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tresults : [],\n\t\t\tmovie : [],\n\t\t\terrorMsg : '',\n\t\t\tshowDeatail: false,\n\t\t\tsearch:\"\"\n\t\t}\n\n\t}\n\tcomponentDidMount() {\n\t\t\n\t\tvar j=5;\n\t\t\n\n\t\t\t// this.getOneMovieDetail();\n\t\t\taxios.get(\"https://api.themoviedb.org/4/list/1?page=1&api_key=e65e3e05c4be826e3088635cf4c56d49\")\n\t\t\t.then(response => {\n\t\t\t\t\n\t\t\t\t// for(var i=0,i<=response.data.length,i++){\n\n\t\t\t\t\tthis.setState({results: response.data});\n\t\t\t\t// }\n\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err)\n\t\t\t\t// this.setState({errorMsg: \"error retriving data\"})\n\t\t\t})\n\n\t\t\n\t}\n\n\thandleChange(event){\n\n\t\tevent.preventDefault();\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\t\tthis.setState({[name]: event.target.value},()=>{\n\n\t\t// console.log(\"this.state.search\");\n\t\t\tconsole.log(\"this.state.search\",this.state.search);\n\n\t\t\taxios.get(\"https://api.themoviedb.org/3/search/movie?api_key=e65e3e05c4be826e3088635cf4c56d49&language=en-US&query=\"+this.state.search+\"&page=1&include_adult=false\")\n\t\t\t\t.then(response => {\n\t\t\t\t\t\n\t\t\t\t\tthis.setState({\n\n\t\t\t\t\t\tresults: response.data\n\t\t\t\t\t});\n\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t\t\n\t\t\t\t})\n\n\t\t});\n\n\n\n\t\t\n\t}\n\t\n\tgetOneMovieDetail(event){\n\n\t\tvar id = event.currentTarget.id;\n\t\t\n\t\tconsole.log(\"event.currentTarget.id\",event.currentTarget.id);\n\n\t\taxios.get(\"https://api.themoviedb.org/3/movie/\"+id+\"?api_key=e65e3e05c4be826e3088635cf4c56d49\")\n\t\t.then(response => {\n\t\t\tconsole.log(\"one movie ====\",response.data);\n\t\t\tthis.setState({movie: response.data, showDeatail:true});\n\n\t\t\tconsole.log(\"one state  ====\",this.state.movie);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err)\n\t\t\t// this.setState({errorMsg: \"error retriving data\"})\n\t\t})\n\t}\n\trender() {\n\n\t\t\n\n\t\treturn(\n\t\t\t<section>\n\t\t\t\t<div className=\"LayoutWrapper col-lg-12\">\n\t\t\t\t\t<div className=\"SearchBoxWrapper col-lg-10 col-lg-offset-1\">\n\t            \t\t<div className='input-group col-lg-6 col-lg-offset-4'>\n\n\t\t\t\t\t        <input type='text' id='search' name=\"search\" value={this.state.search} className='form-control  searchBar' placeholder='Search movies here...' onChange={this.handleChange.bind(this)}></input>\n\t\t\t\t\t       \t\n\t\t\t\t\t    </div>\n\t\t\t\t\t              \n\t\t\t\t\t\t\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"listPart col-lg-4 \">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.state.results.results?\n\t\t\t\t\t\t\t\t\tthis.state.results.results.map((element,index) =>{\n\t\t\t\t\t\t\t\t\t\t// console.log(\"element \",element);\n\t\t\t\t\t\t\t\t\t\t// console.log(\"element.data\",element.id);\n\t\t\t\t\t\t\t\t\t\t// id={element.data.belongs_to_collection.id}\n\t\t\t\t\t\t\t\t\t\t// id={element.results[index].id}\n\t\t\t\t\t\t\t\t\t return(\n\n\t\t\t\t\t\t\t\t\t \t\t \n\t\t\t\t\t\t\t\t\t \t\t <div id={element.id} key={index} className=\"box1\"  onClick={this.getOneMovieDetail.bind(this)}>\n\t\t\t\t\t\t\t\t\t\t \t\t <div className=\"subBox\">\n\t\t\t\t\t\t\t\t\t\t \t\t <img className=\"subBoxImg\" src={\"https://image.tmdb.org/t/p/w200\"+element.poster_path}></img>\n\t\t\t\t\t\t\t\t\t\t \t\t </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<h4  className=\"MovTitle\">{element.original_title}</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"title\"> vote average: {element.vote_average}</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='title'> Released on : {element.release_date}</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"para\">{element.overview}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t \t)\n\n\t\t\t\t\t\t\t\t\t }) \n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<div>Bye</div>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{ this.state.showDeatail ?\n\n\t\t\t\t\t\t\t<div className=\"DetailPart col-lg-8 \">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"detailBox\" style={{backgroundImage: \"linear-gradient(rgba(0, 0, 0, 1.5), rgba(0, 0, 0, 0.5)),url(\"+\"https:/image.tmdb.org/t/p/w500\"+this.state.movie.backdrop_path+\")\"}}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className=\"imgBox\">\n\t\t\t\t\t\t\t\t\t\t<img className=\"subImgBox\" src={\"https://image.tmdb.org/t/p/w200\"+this.state.movie.poster_path} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h2 className=\"movName\">{this.state.movie.original_title}</h2>\n\t\t\t\t\t\t\t\t\t<h4 className=\"relaseDate\">{this.state.movie.release_date }</h4>\n\t\t\t\t\t\t\t\t\t<h4 className=\"abtMov\">{this.state.movie.genres[0].name+\" \"+this.state.movie.genres[1].name+\" \"+this.state.movie.genres[2].name+\" \"}</h4>\n\t\t\t\t\t\t\t\t\t<h4 className=\"duration\">&nbsp;&nbsp;&nbsp;&nbsp;{this.state.movie.runtime + \" min. \"}</h4>\n\t\t\t\t\t\t\t\t\t<div className=\"tagline\">{this.state.movie.tagline}</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"overview\">Overview</div>\n\t\t\t\t\t\t\t\t\t<p className=\"movPara\">{this.state.movie.overview}</p>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t : null\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\t\n\t\t\t\t</div>\n\t\t\t</section>\n\n\n\n\t\t\t)\n\t}\n}","import React from 'react';\nimport Layout from \"./Blocks/Layout/Layout.js\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n   \n   <div className=\"container-flex\">\n     <Layout />\n   </div>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}